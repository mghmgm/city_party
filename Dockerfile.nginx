# ============ Frontend Build Stage ============
FROM node:22-alpine3.20 AS frontend-build

WORKDIR /usr/src/app

RUN mkdir ./frontend_source

WORKDIR /usr/src/app/frontend_source

COPY ./frontend/package.json .
RUN npm install -g yarn --force
RUN yarn

COPY ./frontend .

RUN yarn build

# ============ Django Build Stage ============
FROM python:3.13-alpine as django-static-build

WORKDIR /usr/src/app

# Устанавливаем системные зависимости для psycopg2 и других пакетов
RUN apk update && \
    apk add --no-cache \
    postgresql-dev \
    gcc \
    python3-dev \
    musl-dev \
    libffi-dev \
    openssl-dev \
    zlib-dev \
    jpeg-dev

# Копируем и устанавливаем Python-зависимости
COPY ./backend/requirements.txt ./requirements.txt
RUN pip install --upgrade pip && \
    pip install -r requirements.txt

# Копируем Django-проект и собираем статику
COPY --chmod=0755 ./backend .
RUN python manage.py collectstatic --noinput

# ============ Nginx Final Stage ============
FROM nginx:1.27.4-alpine

# Копируем конфиг Nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Копируем статику из фронтенда и Django
COPY --from=frontend-build /usr/src/app/frontend_source/static/. ./static
COPY --from=django-static-build /usr/src/app/static/. ./static

EXPOSE 80 443

CMD ["nginx", "-g", "daemon off;"]