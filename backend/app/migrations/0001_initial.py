# Generated by Django 5.2.3 on 2025-06-18 21:49

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('photologue', '0013_alter_watermark_image'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название компании')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Электронная почта')),
                ('tin', models.PositiveBigIntegerField(verbose_name='ИНН')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
                'db_table': 'companies',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('description', models.TextField(max_length=4000, verbose_name='Описание')),
                ('address', models.CharField(max_length=500, verbose_name='Адрес')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('categories', models.ManyToManyField(related_name='events', to='app.category', verbose_name='Категории')),
                ('cover_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.photo', verbose_name='Обложка')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='photologue.gallery', verbose_name='Галерея')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'db_table': 'events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/', verbose_name='Изображение')),
                ('pub_date', models.DateTimeField(verbose_name='Дата публикации')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('is_visible', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banners', to='app.company', verbose_name='Компания')),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banners', to='app.event', verbose_name='Ивент')),
            ],
            options={
                'verbose_name': 'Баннер',
                'verbose_name_plural': 'Баннеры',
                'db_table': 'banners',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название места')),
                ('photo', models.ImageField(upload_to='images/', verbose_name='Изображение')),
                ('description', models.TextField(max_length=4000, verbose_name='Описание')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('address', models.CharField(max_length=500, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Место',
                'verbose_name_plural': 'Места',
                'db_table': 'places',
                'indexes': [models.Index(fields=['created_at'], name='places_created_9fc069_idx'), models.Index(fields=['is_published'], name='places_is_publ_ea423f_idx')],
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(null=True, verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(null=True, verbose_name='Дата окончания')),
                ('price', models.DecimalField(decimal_places=0, max_digits=8, verbose_name='Цена')),
                ('available_quantity', models.PositiveBigIntegerField(default=0, verbose_name='Доступное количество')),
                ('total_quantity', models.PositiveBigIntegerField(default=0, verbose_name='Общее количество')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ticket_types', to='app.event', verbose_name='Событие')),
            ],
            options={
                'verbose_name': 'Тип Билета',
                'verbose_name_plural': 'Типы Билетов',
                'db_table': 'ticket_types',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('avatar', models.ImageField(upload_to='images/', verbose_name='Аватар')),
                ('vk_profile', models.URLField(blank=True, null=True, verbose_name='ВК профиль')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(choices=[('pending', 'Не оплачен'), ('paid', 'Оплачен'), ('canceled', 'Отменен'), ('on_canceled', 'На возврате')], default='pending', max_length=50, verbose_name='Статус оплаты')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='documents/', verbose_name='Файл')),
                ('ticket_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='app.tickettype', verbose_name='Тип билета')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='app.userprofile', verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
                'db_table': 'tickets',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('pub_date', models.DateTimeField(blank=True, null=True, verbose_name='Дата публикации')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('rejected', 'Отклонен'), ('accepted', 'Принят'), ('on_moderation', 'На модерации')], default='on_moderation', max_length=50, verbose_name='Статус')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='app.event', verbose_name='Событие')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='app.userprofile', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'db_table': 'reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['created_at'], name='events_created_9e2206_idx'),
        ),
        migrations.AddIndex(
            model_name='event',
            index=models.Index(fields=['is_published'], name='events_is_publ_8cb0a3_idx'),
        ),
        migrations.AddIndex(
            model_name='banner',
            index=models.Index(fields=['created_at'], name='banners_created_9e788a_idx'),
        ),
        migrations.AddIndex(
            model_name='banner',
            index=models.Index(fields=['event'], name='banners_event_i_ebc543_idx'),
        ),
        migrations.AddIndex(
            model_name='ticket',
            index=models.Index(fields=['owner'], name='tickets_owner_i_70c82f_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['author'], name='reviews_author__db9630_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['event'], name='reviews_event_i_dc2123_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['created_at'], name='reviews_created_53b5d6_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['status'], name='reviews_status_12ddaa_idx'),
        ),
    ]
